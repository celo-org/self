/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ProxyRoot,
  ProxyRootInterface,
} from "../../../contracts/upgradeable/ProxyRoot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610583380380610583833981810160405281019061003291906103ad565b8181610044828261006760201b60201c565b50506100606717e053af06b4cccf60c01b6100ec60201b60201c565b50506104bd565b610076826100ef60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156100d9576100d382826101c260201b60201c565b506100e8565b6100e761024c60201b60201c565b5b5050565b50565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361014b57806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016101429190610486565b60405180910390fd5b8061017e7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61028960201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516101ec919061049f565b600060405180830381855af49150503d8060008114610227576040519150601f19603f3d011682016040523d82523d6000602084013e61022c565b606091505b509150915061024285838361029360201b60201c565b9250505092915050565b6000341115610287576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b6060826102ae576102a98261032860201b60201c565b610320565b600082511480156102d6575060008473ffffffffffffffffffffffffffffffffffffffff163b145b1561031857836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161030f9190610486565b60405180910390fd5b819050610321565b5b9392505050565b60008151111561033b5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b60005b838110156103a1578082015181840152602081019050610386565b50600083830152505050565b600080604083850312156103c057600080fd5b825160018060a01b03811681146103d657600080fd5b80925050602083015160018060401b038111156103f257600080fd5b808401905084601f82011261040657600080fd5b805160018060401b0381111561041f5761041e61036d565b5b604051601f19603f601f19601f8501160116810181811060018060401b038211171561044e5761044d61036d565b5b806040525081815286602083850101111561046857600080fd5b610479826020830160208601610383565b8093505050509250929050565b600060208201905060018060a01b038316825292915050565b600082516104b1818460208701610383565b80830191505092915050565b60b8806104cb6000396000f3fe6080604052600a600c565b005b60186014601a565b6027565b565b60006022604c565b905090565b3660008037600080366000845af43d6000803e80600081146047573d6000f35b3d6000fd5b600060787f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60a1565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea164736f6c634300081c000a";

type ProxyRootConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProxyRootConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProxyRoot__factory extends ContractFactory {
  constructor(...args: ProxyRootConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _logic: AddressLike,
    _data: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_logic, _data, overrides || {});
  }
  override deploy(
    _logic: AddressLike,
    _data: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_logic, _data, overrides || {}) as Promise<
      ProxyRoot & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ProxyRoot__factory {
    return super.connect(runner) as ProxyRoot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyRootInterface {
    return new Interface(_abi) as ProxyRootInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ProxyRoot {
    return new Contract(address, _abi, runner) as unknown as ProxyRoot;
  }
}
