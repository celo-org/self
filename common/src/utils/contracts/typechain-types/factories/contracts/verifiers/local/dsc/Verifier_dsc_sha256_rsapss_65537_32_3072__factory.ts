/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Verifier_dsc_sha256_rsapss_65537_32_3072,
  Verifier_dsc_sha256_rsapss_65537_32_3072Interface,
} from "../../../../../contracts/verifiers/local/dsc/Verifier_dsc_sha256_rsapss_65537_32_3072";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pubSignals",
        type: "uint256[2]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506105e18061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f5c9d69e14610030575b600080fd5b61004a60048036038101906100459190610561565b610060565b60405161005791906105c1565b60405180910390f35b6000610076674af1cae65da4599c60c01b610543565b61008a67070ea212ea26510460c01b610543565b610505565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181106100c0576000805260206000f35b50565b600060405183815284602082015285604082015260408160608360076107d05a03fa9150816100f6576000805260206000f35b825160408201526020830151606082015260408360808360066107d05a03fa91505080610127576000805260206000f35b5050505050565b600060808601600087017f1e7cc13ee881580b18641f832be2b627f9be18899631740faa9ffe1552550aff81527f29bae19c566a865bb9534dd3709247b984c2e19fdb336335d9fd06947f9a736b60208201526101d160008801357f1f94e4e4eda23a97c1c0e9fb68b64a8aa4e8e1c19dad1c5ea5ed2bef5192d5aa7f0dd73afa601d2d79e814fbd49e69197c44eb824f655d7aa1029937a0e5859b89846100c3565b61022160208801357f2ecf0d1628fd43b90df75aa333538fdd2efd6dc448b38ca8e43a14319513ab2f7f0afec9967909caeeebcc3b698a3049a4641ee73af5a31b5ec78f3d8544be628a846100c3565b50823581527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208401357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020820152833560408201526020840135606082015260408401356080820152606084013560a08201527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e260c08201527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d192660e08201527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c6101008201527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab6101208201527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a76101408201527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8610160820152600087015161018082015260206000018701516101a08201527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08201527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08201527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008201527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220820152843561024082015260208501356102608201527f0d7d712d3d58f1835a0d2c44768fbf77320dca17cf870fb356c66d48a15a8d0f6102808201527f032775b739ff35ecc4b4fc5a104a57fab2c1d545e4bfea0e9f38a18ee443c5946102a08201527f1579ce943991fcc0ce490adbab741263c4fe41ae57c8e94009ea7f529395cf6c6102c08201527f194a0106a1c098a623d0c0f8f089c776042a012634cf5bbd4452109535cbb1d16102e08201526020816103008360086107d05a03fa815181169250505095945050505050565b604051610380810160405261051d600084013561008f565b61052a602084013561008f565b610537818486888a61012e565b90508060005260206000f35b50565b60008190508260408301111561055b57600080fd5b92915050565b600080600080610140858703121561057857600080fd5b6105828686610546565b935060c085018681111561059557600080fd5b6040860193506105a58782610546565b9250506105b6866101008701610546565b905092959194509250565b600060208201905082151582529291505056fea164736f6c634300081c000a";

type Verifier_dsc_sha256_rsapss_65537_32_3072ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Verifier_dsc_sha256_rsapss_65537_32_3072ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier_dsc_sha256_rsapss_65537_32_3072__factory extends ContractFactory {
  constructor(
    ...args: Verifier_dsc_sha256_rsapss_65537_32_3072ConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Verifier_dsc_sha256_rsapss_65537_32_3072 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): Verifier_dsc_sha256_rsapss_65537_32_3072__factory {
    return super.connect(
      runner
    ) as Verifier_dsc_sha256_rsapss_65537_32_3072__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Verifier_dsc_sha256_rsapss_65537_32_3072Interface {
    return new Interface(
      _abi
    ) as Verifier_dsc_sha256_rsapss_65537_32_3072Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Verifier_dsc_sha256_rsapss_65537_32_3072 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as Verifier_dsc_sha256_rsapss_65537_32_3072;
  }
}
