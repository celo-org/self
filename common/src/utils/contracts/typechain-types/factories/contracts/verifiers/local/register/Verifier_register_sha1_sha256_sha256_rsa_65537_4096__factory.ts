/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  Verifier_register_sha1_sha256_sha256_rsa_65537_4096,
  Verifier_register_sha1_sha256_sha256_rsa_65537_4096Interface,
} from "../../../../../contracts/verifiers/local/register/Verifier_register_sha1_sha256_sha256_rsa_65537_4096";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_pA",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "_pB",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "_pC",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[3]",
        name: "_pubSignals",
        type: "uint256[3]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506106468061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806311479fea14610030575b600080fd5b61004a600480360381019061004591906105be565b610060565b6040516100579190610626565b60405180910390f35b600061007667c69bb94efce8b56360c01b6105a0565b61008a6774479d2da3b980c360c01b6105a0565b610555565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181106100c0576000805260206000f35b50565b600060405183815284602082015285604082015260408160608360076107d05a03fa9150816100f6576000805260206000f35b825160408201526020830151606082015260408360808360066107d05a03fa91505080610127576000805260206000f35b5050505050565b600060808601600087017f1762ff5b850dd3c176f4a6300864812354e93d5ca634c3abc8aa153c24b3f73c81527f161ea56f6a613cfea4eca65b9976c0c290f74f8e34d493beb1321a325e5aabeb60208201526101d160008801357f138fa4f827b1cd629ade134a0461c4728ba69319a1ca103512e0321d955480617f2b346dc797e6df81662c3563d58f9d688d232ccd20d81e1247b963b61eafc4b7846100c3565b61022160208801357f169291446428deac8a9d5e698f5da6f0e7468af57a606f24a03ad331e23430ae7f16dd7a3acead2c2016f89f797f7536da412f36fc73db816b0c39ec7ea37e606e846100c3565b61027160408801357f21ef4cc93fff3900ca717fb0b291ce00711ae37c955d2d60fd11fea9c29262127f1a7c42f9e5ebc26bcb4b54f1de25f3ba0e5554c5e949293eaa795c3aed07c518846100c3565b50823581527f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4760208401357f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd4703066020820152833560408201526020840135606082015260408401356080820152606084013560a08201527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e260c08201527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d192660e08201527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c6101008201527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab6101208201527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a76101408201527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8610160820152600087015161018082015260206000018701516101a08201527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c26101c08201527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed6101e08201527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b6102008201527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa610220820152843561024082015260208501356102608201527f1e154a2f1f63dcd009189eaa2b2e77b02c6dc1ddbe45f751b29750523914c92b6102808201527f218b99ff620d6ced4da8ffbde12bdbbad1f3b710c659c4928857ad996fca44446102a08201527f1af0db170cb7c5491bd33d8fc9d3600e0965a38e2f4ea87a497501458f4ecc2e6102c08201527f16001c3d51f9791f2002a92c6679474abb72bf530ff58aa77369a6da31c344b26102e08201526020816103008360086107d05a03fa815181169250505095945050505050565b604051610380810160405261056d600084013561008f565b61057a602084013561008f565b610587604084013561008f565b610594818486888a61012e565b90508060005260206000f35b50565b6000819050826040830111156105b857600080fd5b92915050565b60008060008061016085870312156105d557600080fd5b6105df86866105a3565b935060c08501868111156105f257600080fd5b60408601935061060287826105a3565b925050856101608601111561061657600080fd5b6101008501905092959194509250565b600060208201905082151582529291505056fea164736f6c634300081c000a";

type Verifier_register_sha1_sha256_sha256_rsa_65537_4096ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Verifier_register_sha1_sha256_sha256_rsa_65537_4096ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier_register_sha1_sha256_sha256_rsa_65537_4096__factory extends ContractFactory {
  constructor(
    ...args: Verifier_register_sha1_sha256_sha256_rsa_65537_4096ConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Verifier_register_sha1_sha256_sha256_rsa_65537_4096 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): Verifier_register_sha1_sha256_sha256_rsa_65537_4096__factory {
    return super.connect(
      runner
    ) as Verifier_register_sha1_sha256_sha256_rsa_65537_4096__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Verifier_register_sha1_sha256_sha256_rsa_65537_4096Interface {
    return new Interface(
      _abi
    ) as Verifier_register_sha1_sha256_sha256_rsa_65537_4096Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Verifier_register_sha1_sha256_sha256_rsa_65537_4096 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as Verifier_register_sha1_sha256_sha256_rsa_65537_4096;
  }
}
